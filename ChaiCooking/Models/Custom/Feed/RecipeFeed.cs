// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var recipeFeed = RecipeFeed.FromJson(jsonString);

using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace ChaiCooking.Models.Custom.Feed
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class RecipeFeed
    {
        [JsonProperty("data")]
        public List<Datum> Data { get; set; }

        [JsonProperty("meta")]
        public Meta Meta { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("key")]
        public Key Key { get; set; }

        [JsonProperty("display")]
        public Display Display { get; set; }

        [JsonProperty("content")]
        public Content Content { get; set; }

        [JsonProperty("chai")]
        public Chai Chai { get; set; }
    }

    public partial class Chai
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("prep_time")]
        public long? PrepTime { get; set; }

        [JsonProperty("cook_time")]
        public long? CookTime { get; set; }

        [JsonProperty("total_time")]
        public long? TotalTime { get; set; }

        [JsonProperty("method")]
        public string Method { get; set; }

        [JsonProperty("meal_category")]
        public MealCategory MealCategory { get; set; }

        [JsonProperty("core_ingredient")]
        public CoreIngredient CoreIngredient { get; set; }

        [JsonProperty("author")]
        public string Author { get; set; }

        [JsonProperty("creator")]
        public Creator Creator { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class MealCategory
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("image_url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri ImageUrl { get; set; }
    }

    public partial class CoreIngredient
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("image_url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri ImageUrl { get; set; }
    }

    public partial class Content
    {
        [JsonProperty("recipe")]
        public Recipe recipe { get; set; }
    }

    public partial class Author
    {
        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class Creator
    {
        [JsonProperty("id")]
        public int ID { get; set; }

        [JsonProperty("bio")]
        public string Bio { get; set; }

        [JsonProperty("display_name")]
        public string DisplayName { get; set; }

        [JsonProperty("image_url")]
        public Uri Url { get; set; }

        [JsonProperty("website_links")]
        public Uri[] WebsiteLinks { get; set; }
    }

    public partial class ImageElement
    {
        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("responsive")]
        public ResponsiveClass Responsive { get; set; }
    }

    public partial class ResponsiveClass
    {
        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("width")]
        public long Width { get; set; }

        [JsonProperty("height")]
        public long Height { get; set; }
    }

    public partial class Display
    {
        [JsonProperty("displayName")]
        public string DisplayName { get; set; }

        [JsonProperty("images")]
        public List<ImageElement> Images { get; set; }

        [JsonProperty("tag")]
        public Tag Tag { get; set; }
    }

    public partial class Tag
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("display_name")]
        public string DisplayName { get; set; }

        [JsonProperty("image")]
        public ResponsiveClass Image { get; set; }
    }

    public partial class Key
    {
        [JsonProperty("id")]
        public string Id { get; set; }
    }

    public partial class Meta
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("paging")]
        public Paging Paging { get; set; }
    }

    public partial class Paging
    {
        [JsonProperty("cursors")]
        public Cursors Cursors { get; set; }
    }

    public partial class Cursors
    {
        [JsonProperty("after")]
        public string After { get; set; }
    }

    public partial class RecipeFeed
    {
        public static RecipeFeed FromJson(string json) => JsonConvert.DeserializeObject<RecipeFeed>(json, ChaiCooking.Models.Custom.Feed.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this RecipeFeed self) => JsonConvert.SerializeObject(self, ChaiCooking.Models.Custom.Feed.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}

